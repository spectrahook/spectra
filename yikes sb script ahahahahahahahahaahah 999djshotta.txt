local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
 
local Window = Rayfield:CreateWindow({
   Name = "ðŸ”¥ Djshotta Hub BETA! | South bronx ðŸ”« | Best free trial sb script",
   LoadingTitle = "ðŸ”« Paid South Bronx ðŸ’¥",
   LoadingSubtitle = "By djshotta",
 
Theme = "Green", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "djshotta hub"
   },
   Discord = {
      Enabled = true,
      Invite = "Crimson Script's", 
      RememberJoins = true 
   },
   KeySystem = true, 
   KeySettings = {
      Title = "Key | Djshotta hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "fuccbronx", 
      SaveKey = true, 
      GrabKeyFromSite = true, 
      Key = {"freetrial3days"} 
   }
})
 
local MainTab = Window:CreateTab("Home", nil) 
 local MainSection = MainTab:CreateSection("Home")
 
 local MainButton = MainTab:CreateButton({
    Name = "Discord",
    Callback = function()
      setclipboard("https://discord.gg/VmJtYcbZkF")
      print("Invite link copied to clipboard!")
      Rayfield:Notify({
        Title = "Invite Link Copied!",
        Content = "Join server",
        Duration = 5,
        Image = 13047715178,
        Actions = { 
           Ignore = {
              Name = "Okay!",
              Callback = function()
              print("The user tapped Okay!")
           end
        },
     },
     })
  end,
})
 
 local MainButton = MainTab:CreateButton({
   Name = "My YouTube",
   Callback = function()
       setclipboard("https://www.youtube.com/@999djshotta")
       print("Got link to yt!")
       Rayfield:Notify({
         Title = "Got link!",
         Content = "Subcribe?",
         Duration = 5,
         Image = 13047715178,
         Actions = { 
            Ignore = {
               Name = "Okay!",
               Callback = function()
              print("The user tapped Okay!")
            end
         },
      },
      })
   end,
})
 
local MainButton = MainTab:CreateButton({
    Name = "Inf yield",
    Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end,
})
 local MainButton = MainTab:CreateButton({
    Name = "Hold down alt and click to delete",
    Callback = function()
--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Plr = game:GetService("Players").LocalPlayer
local Mouse = Plr:GetMouse()
 
Mouse.Button1Down:connect(function()
if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftAlt) then return end
if not Mouse.Target then return end
Mouse.Target:Destroy()
end)
end,
})
 
local MainButton = MainTab:CreateButton({
    Name = "Keyboard script",
    Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/rrixh/skripts/refs/heads/main/deltamobile-keyboard-kraxked",true))();
end,
})
 
local AimbotTab = Window:CreateTab("Aimbot", nil)
local Section = AimbotTab:CreateSection("Aimbot")
 
local Button = AimbotTab:CreateButton({
    Name = "Remove Aimbot Fov",
    Callback = function()
        if not aimbotEnabled then
            -- First click: Disable Aimbot
            aimbotEnabled = false
 
           -- Hide FOV circle and arrow drawing
            if fovCircle then
                fovCircle.Visible = false
                fovCircle:Remove()  -- Delete FOV circle completely
                fovCircle = nil  -- Clear reference
            end
            if arrow then
                arrow.Visible = false
                arrow:Remove()  -- Delete arrow drawing completely
                arrow = nil  -- Clear reference
            end
 
            -- Clean up RenderStepped link
            if RenderSteppedConnection then
                RenderSteppedConnection:Disconnect()
                RenderSteppedConnection = nil
            end
 
            -- Locking process disabled
            Aiming = false
            print("Aimbot disabled.")
        else
            -- If aimbotEnabled is true, reverse the situation and enable it
            aimbotEnabled = true
 
            -- Create FOV circle and arrow drawing
            if not fovCircle then
                fovCircle = Drawing.new("Circle")
                fovCircle.Radius = FOVRadius
                fovCircle.Color = Color3.fromRGB(255, 0, 255)
                fovCircle.Thickness = 2
                fovCircle.Transparency = 1
                fovCircle.Filled = false
            end
 
            if not arrow then
                arrow = Drawing.new("Line")
                arrow.Visible = true
                arrow.Color = Color3.fromRGB(255, 0, 0)
                arrow.Thickness = 2
            end
 
            -- When aimbot is enabled, start rendering
            RenderSteppedConnection = RunService.RenderStepped:Connect(function()
                fovCircle.Position = UserInputService:GetMouseLocation()  -- Place FOV circle at mouse position
 
                -- Track the target
                if Aiming then
                    local closestPlayer = getClosestPlayerInFOV()
                    if closestPlayer then
                        aimAt(closestPlayer, AimSmoothing)
                    end
                end
 
                -- Arrow drawing
                local closestPlayer = getClosestPlayerInFOV()
                if closestPlayer then
                    drawArrowToTarget(closestPlayer)
                else
                    arrow.Visible = false
                end
            end)
 
            -- Aimbot locking active
            Aiming = true
            print("Aimbot enabled.")
        end
    end
})
 
local aimAtHead = true 
 
local Slider = AimbotTab:CreateSlider({
    Name = "Aimbot",
    Range = {50, 600},
    Increment = 10, 
    Suffix = "Size", 
    CurrentValue = 100, 
    Flag = "Slider1", 
    Callback = function(Value)
        -- Keep current circle color
        local previousColor = fovCircle and fovCircle.Color or Color3.fromRGB(255, 255, 255) -- Previous color or default
 
        -- Clear all previous objects and links
        if fovCircle then
            fovCircle:Remove()
            fovCircle = nil
        end
        if arrow then
            arrow:Remove()
            arrow = nil
        end
        if RenderSteppedConnection then
            RenderSteppedConnection:Disconnect()
            RenderSteppedConnection = nil
        end
        if InputBeganConnection then
            InputBeganConnection:Disconnect()
            InputBeganConnection = nil
        end
        if InputEndedConnection then
            InputEndedConnection:Disconnect()
            InputEndedConnection = nil
        end
 
        -- Clear all previous objects and links
        local Players = game:GetService("Players")
        local UserInputService = game:GetService("UserInputService")
        local RunService = game:GetService("RunService")
        local LocalPlayer = Players.LocalPlayer
        local Camera = game.Workspace.CurrentCamera
        local AimPartName = "Head"
        local HumanoidRootPartName = "HumanoidRootPart"
 
        local AimSmoothing = 0.2
        local AimDistance = 300
        local FOVRadius = Value -- Value from Slider
        local Aiming = false
 
        -- New FOV circle
        fovCircle = Drawing.new("Circle")
        fovCircle.Radius = FOVRadius
        fovCircle.Color = previousColor -- Previous color is preserved
        fovCircle.Thickness = 2
        fovCircle.Transparency = 1
        fovCircle.Filled = false
 
        -- New arrow drawing
        arrow = Drawing.new("Line")
        arrow.Visible = false
        arrow.Color = Color3.fromRGB(255, 0, 0)
        arrow.Thickness = 2
 
        -- Aiming functions
        local function aimAt(targetPlayer, smooth)
            local character = targetPlayer.Character
            if character then
                local targetPart
                if aimAtHead then
                    targetPart = character:FindFirstChild("Head")  -- Target head
                else
                    targetPart = character:FindFirstChild("HumanoidRootPart")  -- Aim torso (HumanoidRootPart)
                end
 
                if targetPart then
                    local velocity = character.HumanoidRootPart.Velocity
                    local LookAt
                    if velocity.Magnitude < 0.07 then
                        LookAt = targetPart.Position
                    else
                        local leadTime = math.min(velocity.Magnitude * 0.14, 140)
                        LookAt = targetPart.Position + (velocity.Unit * leadTime)
                    end
 
                    -- Aim with the selected part (Head or Torso)
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, LookAt:Lerp(targetPart.Position, smooth))
                end
            end
        end
 
        local function isInFOV(targetPlayer)
            local character = targetPlayer.Character
            if character and character:FindFirstChild(AimPartName) then
                local aimPart = character[AimPartName]
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid and humanoid.Health > 1 then
                    local screenPosition, onScreen = Camera:WorldToViewportPoint(aimPart.Position)
                    local distanceFromMouse = (Vector2.new(screenPosition.X, screenPosition.Y) - UserInputService:GetMouseLocation()).Magnitude
                    return onScreen and distanceFromMouse <= FOVRadius
                end
            end
            return false
        end
 
        local function getClosestPlayerInFOV()
            local closestPlayer = nil
            local shortestDistance = AimDistance
 
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    local character = player.Character
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.Health > 1 and character:FindFirstChild("HumanoidRootPart") and isInFOV(player) then
                        local distance = (LocalPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                        if distance < shortestDistance then
                            closestPlayer = player
                            shortestDistance = distance
                        end
                    end
                end
            end
            return closestPlayer
        end
 
        local function drawArrowToTarget(targetPlayer)
            local character = targetPlayer.Character
            local humanoid = character and character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health > 1 and character:FindFirstChild(HumanoidRootPartName) then
                local aimPart = character[HumanoidRootPartName]
                local screenPosition, onScreen = Camera:WorldToViewportPoint(aimPart.Position)
 
                if onScreen then
                    local mouseLocation = UserInputService:GetMouseLocation()
                    arrow.From = mouseLocation
                    arrow.To = Vector2.new(screenPosition.X, screenPosition.Y)
                    arrow.Color = isInFOV(targetPlayer) and Color3.fromRGB(255, 165, 0) or Color3.fromRGB(255, 0, 0)
                    arrow.Visible = true
                else
                    arrow.Visible = false
                end
            else
                arrow.Visible = false
            end
        end
 
        -- Access controls
        InputBeganConnection = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
                Aiming = true
            end
            if input.KeyCode == Enum.KeyCode.P then
                Aiming = false
            end
        end)
 
        InputEndedConnection = UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
                Aiming = false
            end
        end)
 
        -- Render cycle
        RenderSteppedConnection = RunService.RenderStepped:Connect(function()
            fovCircle.Position = UserInputService:GetMouseLocation()
 
            if Aiming then
                local closestPlayer = getClosestPlayerInFOV()
                if closestPlayer then
                    aimAt(closestPlayer, AimSmoothing)
                end
            end
 
            local closestPlayer = getClosestPlayerInFOV()
            if closestPlayer then
                drawArrowToTarget(closestPlayer)
            else
                arrow.Visible = false
            end
        end)
    end
})
 
local FOVColorPicker = AimbotTab:CreateColorPicker({
    Name = "FOV Circle Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "FOVColorPicker",
    Callback = function(Value)
        if fovCircle then
            fovCircle.Color = Value
        end
    end
})
 
local Dropdown = AimbotTab:CreateDropdown({
   Name = "Aimbot Target",
   Options = {"Head","Body"},
   CurrentOption = {"Head"}, 
   MultipleOptions = false,
   Flag = "Dropdown1",
   Callback = function(Options)
       if Options[1] == "Head" then
           aimAtHead = true
       else
           aimAtHead = false
       end
   end
})
 
 
 
 local MainTab = Window:CreateTab("ESP", nil) -- Title, Image
local MainSection = MainTab:CreateSection("ESP")
 
local MainButton = MainTab:CreateButton({
    Name = "Inv-Esp",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/2f62eJYF',true))()
    end,
 })
 
 local MainButton = MainTab:CreateButton({
    Name = "Box-Esp",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/30CtYQFm',true))()
    end,
 })
 
 local MainButton = MainTab:CreateButton({
    Name = "Atm-Esp",
    Callback = function()
        local c = workspace.CurrentCamera
local rs = game:GetService("RunService")
 
-- ATM pozisyonlarÄ±nÄ± tutacak bir tablo (Array)
local atmPositions = {}
 
-- Ã–rnek ATM pozisyonlarÄ±
table.insert(atmPositions, Vector3.new(497.45, 20.78, 405.95))
table.insert(atmPositions, Vector3.new(-266, 20.78, -214))
table.insert(atmPositions, Vector3.new(-378, 20.78, -358))
table.insert(atmPositions, Vector3.new(525, 10.78, -99))
table.insert(atmPositions, Vector3.new(-11, 20.78, 236))
table.insert(atmPositions, Vector3.new(360, 20.78, -357.33))
table.insert(atmPositions, Vector3.new(538.47, 20.78, -347.02))
table.insert(atmPositions, Vector3.new(701.39, 20.78, -238.52))
table.insert(atmPositions, Vector3.new(716.77, 20.78, 416.19))
table.insert(atmPositions, Vector3.new(236.08, 20.78, -165.54))
table.insert(atmPositions, Vector3.new(-33.39, 20.78, -302.29))
table.insert(atmPositions, Vector3.new(-536.53, 20.78, -22.48))
table.insert(atmPositions, Vector3.new(-654.00, 20.78, 155.48))
table.insert(atmPositions, Vector3.new(-315, 20.78, 147.99))
table.insert(atmPositions, Vector3.new(-457.42, 20.78, 371))
table.insert(atmPositions, Vector3.new(-457.42, 20.78, 371))
 
 
-- ATM'ler iÃ§in her bir yazÄ±yÄ± tutacak bir tablo
local atmTexts = {}
 
-- Her ATM pozisyonu iÃ§in yazÄ± nesnesi oluÅŸturuyoruz
for _, atmPosition in ipairs(atmPositions) do
    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true
    text.Outline = false
    text.Font = 3
    text.Size = 11
    text.Color = Color3.fromRGB(0, 255, 0) -- Green color
    text.Text = "ATM"
    table.insert(atmTexts, {position = atmPosition, text = text})
end
 
local function render()
    local onScreenAny = false
 
    -- We check all ATM positions
    for _, atmData in ipairs(atmTexts) do
        local atmPosition = atmData.position
        local text = atmData.text
 
        -- Convert world coordinate to screen coordinate
        local screenPosition, onScreen = c:WorldToViewportPoint(atmPosition)
 
        -- If inside the screen, show text
        if onScreen then
            text.Position = Vector2.new(screenPosition.X, screenPosition.Y)
            text.Visible = true
            onScreenAny = true
        else
            text.Visible = false
        end
    end
 
    -- If no ATM is off screen, hide all text
    if not onScreenAny then
        for _, atmData in ipairs(atmTexts) do
            atmData.text.Visible = false
        end
    end
end
 
-- We keep the text on the screen continuously with RenderStepped
rs.RenderStepped:Connect(render)
 
-- To add a new ATM position:
-- table.insert(atmPositions, newPosition)
    end,
 })
 
 local MainButton = MainTab:CreateButton({
    Name = "Health-Esp",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/mhXZ49JQ',true))()
    end,
 })
 
 local MainButton = MainTab:CreateButton({
    Name = "Name-Esp",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/3EvJZegg',true))()
    end,
 })
 
 local MainButton = MainTab:CreateButton({
    Name = "Distance-Esp",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/nDnBxSyZ',true))()
    end,
 })
 
 local MainTab = Window:CreateTab("Player")
 local MainSection = MainTab:CreateSection("Player")
 
 local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {1, 22},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", 
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})
 
local Slider = MainTab:CreateSlider({
    Name = "Player Fov",
    Range = {90, 120},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 90,
    Flag = "sliderws", 
    Callback = function(Value)
        local Camera = game:GetService("Workspace").CurrentCamera
        Camera.FieldOfView = Value
    end,
 })
 
 
local MainTab = Window:CreateTab("Auto farm", nil) -- Title, Image
 local MainSection = MainTab:CreateSection("Autofarm")
 
 local MainButton = MainTab:CreateButton({
    Name = "Trash Farm                                                                              (P) stop",
    Callback = function()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local virtualInputManager = game:GetService("VirtualInputManager")
local userInputService = game:GetService("UserInputService")
 
-- Locations
local konum1 = Vector3.new(699.29, 3.55, 166.56)
local konum2 = Vector3.new(718.74, 3.74, 144.36)
local konum3 = Vector3.new(747.13, 3.66, 147.96)
local konum4 = Vector3.new(727.38, 3.93, 212.59)
 
-- State control variable
local isRunning = true
 
-- E key hold function
local function pressE()
    virtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
end
 
-- E key release function
local function releaseE()
    virtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end
 
-- Move character to a location
local function moveToPosition(position)
    humanoid:MoveTo(position)
    while isRunning and (character.HumanoidRootPart.Position - position).Magnitude > 1 do
        wait()
        -- If the character hits an object, start the movement over again
        if humanoid.MoveToFinished then
            humanoid:MoveTo(position)
        end
    end
end
 
-- E hold and move function
local function performAction()
   -- Go to location 1 and hold E
    if not isRunning then return end
    moveToPosition(konum1)
    pressE()
    wait(1.60)  -- Wait 1.6 seconds
    releaseE()
 
    -- Go to location 2
    if not isRunning then return end
    moveToPosition(konum2)
 
    -- Go to location 3
    if not isRunning then return end
    moveToPosition(konum3)
 
    -- Go to location 4 and hold E
    if not isRunning then return end
    moveToPosition(konum4)
    pressE()
    wait(1.60)  -- Wait 1.6 seconds
    releaseE()
 
    -- Go back to location 3
    if not isRunning then return end
    moveToPosition(konum3)
 
    -- Go back to location 2
    if not isRunning then return end
    moveToPosition(konum2)
 
   -- Go back to location 1
    if not isRunning then return end
    moveToPosition(konum1)
end
 
-- Start loop
spawn(function()
    while isRunning do
        performAction()
        wait(1)  -- A short wait between cycles
    end
end)
 
-- Press P to stop the loop
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P then
        isRunning = false
        humanoid:MoveTo(character.HumanoidRootPart.Position) -- Stop motion
    end
end)
    end,
 })
 
 local MainButton = MainTab:CreateButton({
    Name = "Boxes Farm                                                                              (P) stop",
    Callback = function()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local virtualInputManager = game:GetService("VirtualInputManager")
local userInputService = game:GetService("UserInputService")
local backpack = player.Backpack -- For items in inventory
-- Locations
local konum1 = Vector3.new(-551.46, 3.54, -86.13)
local konum2 = Vector3.new(-540.16, 3.54, -83.06)
local konum3 = Vector3.new(-401.42, 3.36, -70.90)
 
-- State control variable
local isRunning = true
 
-- E key hold function
local function pressE()
    virtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
end
 
-- E key release function
local function releaseE()
    virtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end
 
-- Move character to a location
local function moveToPosition(position)
    humanoid:MoveTo(position)
    while isRunning and (character.HumanoidRootPart.Position - position).Magnitude > 1 do
        wait()
        -- If the character hits an object, start the movement over again
        if humanoid.MoveToFinished then
            humanoid:MoveTo(position)
        end
    end
end
 
 
local function getCrateFromBackpack()
    for _, item in ipairs(backpack:GetChildren()) do
        if item.Name == "Crate" then -- Check Crate in inventory
            return item
        end
    end
    return nil
end
 
 
local function equipCrate(crate)
    if crate then
        -- If Crate is found, put it on the character's hand
        crate.Parent = character
        crate.Handle.CFrame = character:WaitForChild("RightHand").CFrame -- Place in RightHand
    end
end
 
-- E hold and move function
local function performAction()
    -- Go to location 1
    if not isRunning then return end
    moveToPosition(konum1)
 
    -- Hold down the E key
    if not isRunning then return end
    pressE()
    wait(1.50)  -- Wait 1.5 seconds
    releaseE()
 
    -- Go to location 2
    if not isRunning then return end
    moveToPosition(konum2)
 
    -- Go to location 3
    if not isRunning then return end
    moveToPosition(konum3)
 
 
    if not isRunning then return end
    local crate = getCrateFromBackpack()
 
 
    if not isRunning then return end
    equipCrate(crate)
 
    -- Hold down the E key
    if not isRunning then return end
    pressE()
    wait(1.60)  -- Wait 1.6 seconds
    releaseE()
 
    -- Go back to Location 2 (after finishing Location 3)
    if not isRunning then return end
    moveToPosition(konum2)
 
    -- Go back to location 1
    if not isRunning then return end
    moveToPosition(konum1)
end
 
-- Start loop
spawn(function()
    while isRunning do
        performAction()
        wait(1)  -- A short wait between cycles
    end
end)
 
-- Press P to stop the loop
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P then
        isRunning = false
        humanoid:MoveTo(character.HumanoidRootPart.Position) -- Stop motion
    end
end)
    end,
 })
 
 local MainButton = MainTab:CreateButton({
    Name = "Chips Work                                                                                (P) stop",
    Callback = function()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local virtualInputManager = game:GetService("VirtualInputManager")
local camera = workspace.CurrentCamera
local userInputService = game:GetService("UserInputService")
 
-- Variable controlling the situation
local isRunning = true
 
-- Location information
local locations = {
    {pos = Vector3.new(-461.62, 3.86, -467.55), tool = "Potato", holdE = true, holdTime = 1, waitTime = 2},
    {pos = Vector3.new(-461.62, 3.86, -473.63), holdE = true, holdTime = 1, waitTime = 2},
    {pos = Vector3.new(-466.43, 3.96, -500.60)},
    {pos = Vector3.new(-462.67, 3.86, -522.34), tool = "Flour", holdE = true, holdTime = 1, waitTime = 2},
    {pos = Vector3.new(-468.11, 3.86, -494.76)},
    {pos = Vector3.new(-515.34, 3.86, -482.29), holdE = true, holdTime = 1, waitTime = 65, reholdE = true, reholdTime = 1},
    {pos = Vector3.new(-492, 4, -473)}, -- There will be no waiting here
    {pos = Vector3.new(-480, 4, -434), holdE = true, holdTime = 1} -- Last position
}
 
-- Adjust the camera to face down
local function setCameraAbove(position)
    local abovePosition = position + Vector3.new(0, 10, 0) -- Move camera 10 units up
    camera.CFrame = CFrame.new(abovePosition, position) -- Make him look from top to bottom
end
 
-- Pressing the E key
local function pressE()
    virtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
end
 
local function releaseE()
    virtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end
 
-- Move character to a location
local function moveToPosition(position)
    humanoid:MoveTo(position)
    while isRunning and (character.HumanoidRootPart.Position - position).Magnitude > 1 do
        wait(0.1)
        if humanoid.MoveToFinished then
            humanoid:MoveTo(position) -- If movement stopped, restart
        end
    end
end
 
-- Perform operations in order
local function performActions()
    while isRunning do -- The cycle continues continuously
        for i, location in ipairs(locations) do
            if not isRunning then return end -- If stopped, end loop
 
			-- Go to location
            moveToPosition(location.pos)
 
            -- If a vehicle selection is to be made
            if location.tool and isRunning then
                local tool = player.Backpack:FindFirstChild(location.tool)
                if tool then
                    tool.Parent = character
                end
            end
 
            -- If the E key is pressed
            if location.holdE and isRunning then
                pressE()
                wait(location.holdTime)
                releaseE()
            end
 
            -- Wait if there is a waiting time (except before the last position)
            if location.waitTime and i ~= (#locations - 1) and isRunning then
                wait(location.waitTime)
                setCameraAbove(location.pos) -- Set up camera
            end
 
            -- If the E key is pressed again
            if location.reholdE and isRunning then
                pressE()
                wait(location.reholdTime)
                releaseE()
            end
        end
    end
end
 
-- Start operations
spawn(function()
    performActions()
end)
 
-- Stop the process when P key is pressed
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P then
        isRunning = false
        humanoid:MoveTo(character.HumanoidRootPart.Position) -- Stop motion
    end
end)
    end
})
 
 
 local MainTab = Window:CreateTab("Misc", nil) -- Title, Image
 local MainSection = MainTab:CreateSection("MISC")
 
 local MainButton = MainTab:CreateButton({
    Name = "Fly",
    Callback = function()
        setclipboard("https://discord.com/invite/juniorscripts")
        print("Coming soon!")
        Rayfield:Notify({
         Title = "Coming soon!",
         Content = "Join server",
         Duration = 5,
         Image = 13047715178,
         Actions = { -- Notification Buttons
            Ignore = {
               Name = "Okay!",
               Callback = function()
               print("The user tapped Okay!")
            end
         },
      },
      })
    end,
 })
 
 Rayfield:Notify({
   Title = "executed Voidhub",
   Content = "Get more in dc server!",
   Duration = 5,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})
 
local MainTab =
Window:CreateTab("Other",nil) -- Title, Image
 
local MainButton = MainTab:CreateButton({
   Name = "join low sever",
Callback = function()
     local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"
 
local _place = game.PlaceId
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
function ListServers(cursor)
  local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
  return Http:JSONDecode(Raw)
end
 
local Server, Next; repeat
  local Servers = ListServers(Next)
  Server = Servers.data[1]
  Next = Servers.nextPageCursor
until Server
 
TPS:TeleportToPlaceInstance(_place,Server.id,game.Players.LocalPlayer)
end,
})
 
local MainSection = MainTab:CreateSection("anti afk")
 
local MainButton = MainTab:CreateButton({
   Name = "anti afk",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/brosula123/Anti-afk/main/Bl%C3%B8xzScript"))()
   end,
})
 
local MainSection = MainTab:CreateSection("Infinite stamina")
 
local MainButton = MainTab:CreateButton({
   Name = "Infinite stamina",
Callback = function()
 
_G.DendriteStamina = true --- Enabled as default.
function B()
    for _, C in pairs(getgc(true)) do
        if type(C) == "function" and getfenv(C).script == game:GetService("Players").LocalPlayer.PlayerScripts.Main.Modules.SprintHandler then
            if debug.getinfo(C).name == "onHeartbeatUpdate" then
                hookfunction(C, function(D)
                    if _G.DendriteStamina then
                        local E = require(game.Players.LocalPlayer.PlayerScripts:WaitForChild("Main"))
                        E.Stamina = 100
                    else
                        local F = require(game.Players.LocalPlayer.PlayerScripts:WaitForChild("Main"))
                        F.Stamina = F.Stamina
                    end
                    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
                    end
                end)
            end
        end
    end
end
B()
end,
})
 
local MainTab =
Window:CreateTab("Player",nil) -- Title, Image
 
local MainButton = MainTab:CreateButton({
   Name = "Instant interact",
Callback = function()
 
for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("ProximityPrompt") then
        v["HoldDuration"] = 0
    end
end
 
 
game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(v)
    v["HoldDuration"] = 0
end) 
   end,
})
 
local MainButton = MainTab:CreateButton({
   Name = "insta loot",
Callback = function()
local ProximityPromptService = game:GetService("ProximityPromptService")
 
if _G.hold then _G.hold:Disconnect() end
_G.hold = ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
    prompt.HoldDuration = 0;
end)
 
 
   -- The function that takes place when the button is pressed
   end,
})
 
local MainButton = MainTab:CreateButton({
   Name = "faster walk speed",
Callback = function()
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 23
    -- The function that takes place when the button is pressed
    end,
 })
 
local Slider = MainTab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 23},
   Increment = 1,
   Suffix = "speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})
 
local MainButton = MainTab:CreateButton({
   Name = "Noclip",
Callback = function()
--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Noclip = nil
local Clip = nil
 
function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end
 
function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end
 
noclip() -- to toggle noclip() and clip()
end,
})
local MainButton = MainTab:CreateButton({
    Name = "Fullbright",
    Callback = function()
game:GetService("Lighting").Brightness = 2
game:GetService("Lighting").ClockTime = 14
game:GetService("Lighting").FogEnd = 100000
game:GetService("Lighting").GlobalShadows = false
game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
end,
})
local MainButton = MainTab:CreateButton({
    Name = "Nolag",
    Callback = function()
local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0
l.GlobalShadows = false
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level01"
for i, v in pairs(g:GetDescendants()) do
    if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
        v.Enabled = false
    elseif v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
        v.TextureID = 10385902758728957
    end
end
for i, e in pairs(l:GetChildren()) do
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end
end,
})
local MainButton = MainTab:CreateButton({
   Name = "Enable reset button",
Callback = function()
 
--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local ScreenGui = Instance.new("ScreenGui")
local ResetButton = Instance.new("TextButton")
 
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
 
ResetButton.Name = "ResetButton"
ResetButton.Parent = ScreenGui
ResetButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ResetButton.Position = UDim2.new(0.5, -50, 0, 10) -- Centered at top
ResetButton.Size = UDim2.new(0, 100, 0, 30)
ResetButton.Font = Enum.Font.SourceSansBold
ResetButton.Text = "Enable Reset"
ResetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ResetButton.TextSize = 20.000
 
-- Your loadstring for reloading
ResetButton.MouseButton1Click:Connect(function()
    loadstring(game:HttpGet("https://pastebin.com/raw/pvNpdimg"))()
end)
end,
})